// Copyright 2022 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

fn quicksort(mut s: []int) {
	if s.len <= 1 {
		ret
	}

	let mut i = -1
	let last = s[s.len-1]
	for j in s {
		let mut x = &s[j]
		if (unsafe{ *x <= last }) {
			i++
			let mut y = &s[i]
			unsafe { *x, *y = *y, *x }
		}
	}

	quicksort(s[:i])
	quicksort(s[i+1:])
}

fn main() {
	let mut my_slice = [1, 9, -2, 25, -24, 4623, 0, -1, 0xFD2]
	outln(my_slice)
	quicksort(my_slice)
	outln(my_slice)
}
