// Copyright 2023 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

pub const E2BIG           = errno(0x7)  // Argument list too long
pub const EACCES          = errno(0xd)  // Permission denied
pub const EADDRINUSE      = errno(0x62) // Address already in use
pub const EADDRNOTAVAIL   = errno(0x63) // Cannot assign requested address
pub const EADV            = errno(0x44) // Advertise error
pub const EAFNOSUPPORT    = errno(0x61) // Address family not supported by protocol
pub const EAGAIN          = errno(0xb)  // Try again
pub const EALREADY        = errno(0x72) // Operation already in progress
pub const EBADE           = errno(0x34) // Invalid exchange
pub const EBADF           = errno(0x9)  // Bad file number
pub const EBADFD          = errno(0x4d) // File descriptor in bad state
pub const EBADMSG         = errno(0x4a) // Not a data message
pub const EBADR           = errno(0x35) // Invalid request descriptor
pub const EBADRQC         = errno(0x38) // Invalid request code
pub const EBADSLT         = errno(0x39) // Invalid slot
pub const EBFONT          = errno(0x3b) // Bad font file format
pub const EBUSY           = errno(0x10) // Device or resource busy
pub const ECANCELED       = errno(0x7d) // Operation Canceled
pub const ECHILD          = errno(0xa)  // No child processes
pub const ECHRNG          = errno(0x2c) // Channel number out of range
pub const ECOMM           = errno(0x46) // Communication error on send
pub const ECONNABORTED    = errno(0x67) // Software caused connection abort
pub const ECONNREFUSED    = errno(0x6f) // Connection refused
pub const ECONNRESET      = errno(0x68) // Connection reset by peer
pub const EDEADLK         = errno(0x23) // Resource deadlock would occur
pub const EDEADLOCK       = errno(0x23) // File locking deadlock error
pub const EDESTADDRREQ    = errno(0x59) // Destination address required
pub const EDOM            = errno(0x21) // Math argument out of domain of func
pub const EDOTDOT         = errno(0x49) // RFS specific error
pub const EDQUOT          = errno(0x7a) // Quota exceeded
pub const EEXIST          = errno(0x11) // File exists
pub const EFAULT          = errno(0xe)  // Bad address
pub const EFBIG           = errno(0x1b) // File too large
pub const EHOSTDOWN       = errno(0x70) // Host is down
pub const EHOSTUNREACH    = errno(0x71) // No route to host
pub const EIDRM           = errno(0x2b) // Identifier removed
pub const EILSEQ          = errno(0x54) // Illegal byte sequence
pub const EINPROGRESS     = errno(0x73) // Operation now in progress
pub const EINTR           = errno(0x4)  // Interrupted system call
pub const EINVAL          = errno(0x16) // Invalid argument
pub const EIO             = errno(0x5)  // I/O error
pub const EISCONN         = errno(0x6a) // Transport endpoint is already connected
pub const EISDIR          = errno(0x15) // Is a directory
pub const EISNAM          = errno(0x78) // Is a named type file
pub const EKEYEXPIRED     = errno(0x7f) // Key has expired
pub const EKEYREJECTED    = errno(0x81) // Key was rejected by service
pub const EKEYREVOKED     = errno(0x80) // Key has been revoked
pub const EL2HLT          = errno(0x33) // Level 2 halted
pub const EL2NSYNC        = errno(0x2d) // Level 2 not synchronized
pub const EL3HLT          = errno(0x2e) // Level 3 halted
pub const EL3RST          = errno(0x2f) // Level 3 reset
pub const ELIBACC         = errno(0x4f) // Can not access a needed shared library
pub const ELIBBAD         = errno(0x50) // Accessing a corrupted shared library
pub const ELIBEXEC        = errno(0x53) // Cannot exec a shared library directly
pub const ELIBMAX         = errno(0x52) // Attempting to link in too many shared libraries
pub const ELIBSCN         = errno(0x51) // .lib section in a.out corrupted
pub const ELNRNG          = errno(0x30) // Link number out of range
pub const ELOOP           = errno(0x28) // Too many symbolic links encountered
pub const EMEDIUMTYPE     = errno(0x7c) // Wrong medium type
pub const EMFILE          = errno(0x18) // Too many open files
pub const EMLINK          = errno(0x1f) // Too many links
pub const EMSGSIZE        = errno(0x5a) // Message too long
pub const EMULTIHOP       = errno(0x48) // Multihop attempted
pub const ENAMETOOLONG    = errno(0x24) // File name too long
pub const ENAVAIL         = errno(0x77) // No XENIX semaphores available
pub const ENETDOWN        = errno(0x64) // Network is down
pub const ENETRESET       = errno(0x66) // Network dropped connection because of reset
pub const ENETUNREACH     = errno(0x65) // Network is unreachable
pub const ENFILE          = errno(0x17) // File table overflow
pub const ENOANO          = errno(0x37) // No anode
pub const ENOBUFS         = errno(0x69) // No buffer space available
pub const ENOCSI          = errno(0x32) // No CSI structure available
pub const ENODATA         = errno(0x3d) // No data available
pub const ENODEV          = errno(0x13) // No such device
pub const ENOENT          = errno(0x2)  // No such file or directory
pub const ENOEXEC         = errno(0x8)  // Exec format error
pub const ENOKEY          = errno(0x7e) // Required key not available
pub const ENOLCK          = errno(0x25) // No record locks available
pub const ENOLINK         = errno(0x43) // Link has been severed
pub const ENOMEDIUM       = errno(0x7b) // No medium found
pub const ENOMEM          = errno(0xc)  // Out of memory
pub const ENOMSG          = errno(0x2a) // No message of desired type
pub const ENONET          = errno(0x40) // Machine is not on the network
pub const ENOPKG          = errno(0x41) // Package not installed
pub const ENOPROTOOPT     = errno(0x5c) // Protocol not available
pub const ENOSPC          = errno(0x1c) // No space left on device
pub const ENOSR           = errno(0x3f) // Out of streams resources
pub const ENOSTR          = errno(0x3c) // Device not a stream
pub const ENOSYS          = errno(0x26) // Function not implemented
pub const ENOTBLK         = errno(0xf)  // Block device required
pub const ENOTCONN        = errno(0x6b) // Transport endpoint is not connected
pub const ENOTDIR         = errno(0x14) // Not a directory
pub const ENOTEMPTY       = errno(0x27) // Directory not empty
pub const ENOTNAM         = errno(0x76) // Not a XENIX named type file
pub const ENOTRECOVERABLE = errno(0x83) // State not recoverable
pub const ENOTSOCK        = errno(0x58) // Socket operation on non-socket
pub const ENOTSUP         = errno(0x5f) // Operation not supported
pub const ENOTTY          = errno(0x19) // Not a typewriter
pub const ENOTUNIQ        = errno(0x4c) // Name not unique on network
pub const ENXIO           = errno(0x6)  // No such device or address
pub const EOPNOTSUPP      = errno(0x5f) // Operation not supported on transport endpoint
pub const EOVERFLOW       = errno(0x4b) // Value too large for defined data type
pub const EOWNERDEAD      = errno(0x82) // Owner died
pub const EPERM           = errno(0x1)  // Operation not permitted
pub const EPFNOSUPPORT    = errno(0x60) // Protocol family not supported
pub const EPIPE           = errno(0x20) // Broken pipe
pub const EPROTO          = errno(0x47) // Protocol error
pub const EPROTONOSUPPORT = errno(0x5d) // Protocol not supported
pub const EPROTOTYPE      = errno(0x5b) // Protocol wrong type for socket
pub const ERANGE          = errno(0x22) // Input is outside the range
pub const EREMCHG         = errno(0x4e) // Remote address changed
pub const EREMOTE         = errno(0x42) // Object is remote
pub const EREMOTEIO       = errno(0x79) // Remote I/O error
pub const ERESTART        = errno(0x55) // Interrupted system call should be restarted
pub const ERFKILL         = errno(0x84) // Operation not possible due to RF-kill
pub const EROFS           = errno(0x1e) // Read-only file system
pub const ESHUTDOWN       = errno(0x6c) // Cannot send after transport endpoint shutdown
pub const ESOCKTNOSUPPORT = errno(0x5e) // Socket type not supported
pub const ESPIPE          = errno(0x1d) // Illegal seek
pub const ESRCH           = errno(0x3)  // No such process
pub const ESRMNT          = errno(0x45) // Srmount error
pub const ESTALE          = errno(0x74) // Stale NFS file handle
pub const ESTRPIPE        = errno(0x56) // Streams pipe error
pub const ETIME           = errno(0x3e) // Timer expired
pub const ETIMEDOUT       = errno(0x6e) // Connection timed out
pub const ETOOMANYREFS    = errno(0x6d) // Too many references: cannot splice
pub const ETXTBSY         = errno(0x1a) // Text file busy
pub const EUCLEAN         = errno(0x75) // Structure needs cleaning
pub const EUNATCH         = errno(0x31) // Protocol driver not attached
pub const EUSERS          = errno(0x57) // Too many users
pub const EWOULDBLOCK     = errno(0xb)  // Operation would block
pub const EXDEV           = errno(0x12) // Cross-device link
pub const EXFULL          = errno(0x36) // Exchange full
