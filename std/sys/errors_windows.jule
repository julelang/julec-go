// Copyright 2023 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

pub const E2BIG           = errno(0x7)  // Argument list too long
pub const EACCES          = errno(0xd)  // Permission denied
pub const EADDRINUSE      = errno(0x64) // Address already in use
pub const EADDRNOTAVAIL   = errno(0x65) // Cannot assign requested address
pub const EAFNOSUPPORT    = errno(0x66) // Address family not supported by protocol
pub const EAGAIN          = errno(0xb)  // Try again
pub const EALREADY        = errno(0x67) // Operation already in progress
pub const EBADF           = errno(0x9)  // Bad file number
pub const EBADMSG         = errno(0x68) // Not a data message
pub const EBUSY           = errno(0x10) // Device or resource busy
pub const ECANCELED       = errno(0x69) // Operation Canceled
pub const ECHILD          = errno(0xa)  // No child processes
pub const ECONNABORTED    = errno(0x6a) // Software caused connection abort
pub const ECONNREFUSED    = errno(0x6b) // Connection refused
pub const ECONNRESET      = errno(0x6c) // Connection reset by peer
pub const EDEADLK         = errno(0x24) // Resource deadlock would occur
pub const EDEADLOCK       = errno(0x24) // File locking deadlock error
pub const EDESTADDRREQ    = errno(0x6d) // Destination address required
pub const EDOM            = errno(0x21) // Math argument out of domain of func
pub const EEXIST          = errno(0x11) // File exists
pub const EFAULT          = errno(0xe)  // Bad address
pub const EFBIG           = errno(0x1b) // File too large
pub const EHOSTUNREACH    = errno(0x6e) // No route to host
pub const EIDRM           = errno(0x6f) // Identifier removed
pub const EILSEQ          = errno(0x2a) // Illegal byte sequence
pub const EINPROGRESS     = errno(0x70) // Operation now in progress
pub const EINTR           = errno(0x4)  // Interrupted system call
pub const EINVAL          = errno(0x16) // Invalid argument
pub const EIO             = errno(0x5)  // I/O error
pub const EISCONN         = errno(0x71) // Transport endpoint is already connected
pub const EISDIR          = errno(0x15) // Is a directory
pub const ELOOP           = errno(0x72) // Too many symbolic links encountered
pub const EMFILE          = errno(0x18) // Too many open files
pub const EMLINK          = errno(0x1f) // Too many links
pub const EMSGSIZE        = errno(0x73) // Message too long
pub const ENAMETOOLONG    = errno(0x26) // File name too long
pub const ENETDOWN        = errno(0x74) // Network is down
pub const ENETRESET       = errno(0x75) // Network dropped connection because of reset
pub const ENETUNREACH     = errno(0x76) // Network is unreachable
pub const ENFILE          = errno(0x17) // File table overflow
pub const ENOBUFS         = errno(0x77) // No buffer space available
pub const ENODATA         = errno(0x78) // No data available
pub const ENODEV          = errno(0x13) // No such device
pub const ENOENT          = errno(0x2)  // No such file or directory
pub const ENOEXEC         = errno(0x8)  // Exec format error
pub const ENOLCK          = errno(0x27) // No record locks available
pub const ENOLINK         = errno(0x79) // Link has been severed
pub const ENOMEM          = errno(0xc)  // Out of memory
pub const ENOMSG          = errno(0x7a) // No message of desired type
pub const ENOPROTOOPT     = errno(0x7b) // Protocol not available
pub const ENOSPC          = errno(0x1c) // No space left on device
pub const ENOSR           = errno(0x7c) // Out of streams resources
pub const ENOSTR          = errno(0x7d) // Device not a stream
pub const ENOSYS          = errno(0x28) // Function not implemented
pub const ENOTCONN        = errno(0x7e) // Transport endpoint is not connected
pub const ENOTDIR         = errno(0x14) // Not a directory
pub const ENOTEMPTY       = errno(0x29) // Directory not empty
pub const ENOTRECOVERABLE = errno(0x7f) // State not recoverable
pub const ENOTSOCK        = errno(0x80) // Socket operation on non-socket
pub const ENOTSUP         = errno(0x81) // Operation not supported
pub const ENOTTY          = errno(0x19) // Not a typewriter
pub const ENXIO           = errno(0x6)  // No such device or address
pub const EOPNOTSUPP      = errno(0x82) // Operation not supported on transport endpoint
pub const EOVERFLOW       = errno(0x84) // Value too large for defined data type
pub const EOWNERDEAD      = errno(0x85) // Owner died
pub const EPERM           = errno(0x1)  // Operation not permitted
pub const EPIPE           = errno(0x20) // Broken pipe
pub const EPROTO          = errno(0x86) // Protocol error
pub const EPROTONOSUPPORT = errno(0x87) // Protocol not supported
pub const EPROTOTYPE      = errno(0x88) // Protocol wrong type for socket
pub const ERANGE          = errno(0x22) // Input is outside the range
pub const EROFS           = errno(0x1e) // Read-only file system
pub const ESPIPE          = errno(0x1d) // Illegal seek
pub const ESRCH           = errno(0x3)  // No such process
pub const ETIME           = errno(0x89) // Timer expired
pub const ETIMEDOUT       = errno(0x8a) // Connection timed out
pub const ETXTBSY         = errno(0x8b) // Text file busy
pub const EWOULDBLOCK     = errno(0x8c) // Operation would block
pub const EXDEV           = errno(0x12) // Cross-device link
