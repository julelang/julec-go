// Copyright 2022 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::debug::{ENABLE}
use std::os::{exit}

// Internal assertion function.
// Writes fail message to <cerr> and exit failure if assertion failed.
fn _assert(expr: bool, msg: str) {
	if !ENABLE || expr {
		ret
	}
	if msg != "" {
		out("assertion failed: ")
		outln(msg)
	} else {
		outln("assertion failed")
	}
	exit(1)
}

// Writes default fail message to <cerr> and exit failure if assertion failed.
pub fn assert(expr: bool) { _assert(expr, "") }

// Writes fail message to <cerr> and exit failure if assertion failed.
pub fn assert_message(expr: bool, msg: str) { _assert(expr, msg) }

// Panics with given error data if assertion failed.
pub fn assert_panic(expr: bool, error: any) {
	if ENABLE && !expr {
		panic(error)
	}
}
