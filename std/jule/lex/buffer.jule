// Copyright 2023 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::fs::{stat, FsError}
use std::fs::path::{base, dir}
use std::vector::{Vector}

// Fileset for lexing.
pub struct File {
	_path: str
	mut _tokens: Vector[Token]
}

impl File {
	// Reports whether file path is exist and accessible.
	pub fn is_ok(self): bool {
		let (_, err) = stat(self._path)
		ret err == FsError.Ok
	}

	// Returns path.
	pub fn path(self): str { ret self._path }

	// Returns directory of file's path.
	pub fn dir(self): str { ret dir(self._path) }

	// Returns filename.
	pub fn name(self): str { ret base(self._path) }

	// Returns self as uintptr.
	pub fn addr(self): uintptr { ret uintptr(&self) }

	// Returns tokens of file.
	// Tokens are mutable.
	pub fn tokens(mut self): Vector[Token] { ret self._tokens }
}

// Returns new File points to Jule file.
pub fn new_file_set(path: str): &File {
	ret &File{
		_path: path,
	}
}
