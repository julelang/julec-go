// Copyright 2023 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Log kinds.
pub enum LogKind {
	Flat,  // Just text.
	Error, // Error message.
}

// Compiler log.
pub struct Log {
	pub kind:   LogKind
	pub row:    int
	pub column: int
	pub path:   str
	pub text:   str
}

impl Log {
	// Returns text.
	pub fn flat(self): str { ret self.text }

	// Returns error message text.
	pub fn error(self): str {
		let mut log = ""
		log += self.path
		log += ":"
		log += str(self.row)
		log += ":"
		log += str(self.column)
		log += " "
		log += self.text
		ret log
	}

	// Returns message form of log.
	pub fn to_str(self): str {
		match self.kind {
		| LogKind.Flat:  ret self.flat()
		| LogKind.Error: ret self.error()
		|:               ret ""
		}
	}
}
