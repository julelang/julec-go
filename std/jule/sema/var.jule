// Copyright 2023 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::jule::ast::{ScopeTree}
use std::jule::lex::{Token}

// Variable.
pub struct Var {
	pub scope:      &ScopeTree
	pub token:      Token
	pub ident:      str
	pub cpp_linked: bool
	pub constant:   bool
	pub mutable:    bool
	pub public:     bool
	pub used:       bool
	pub doc:        str
	pub kind:       &TypeSymbol
	pub value:      &Value

	// This variable depended to these variables for initialization expression.
	// Nil if not global variable.
	pub depends:    []&Var
}

impl Var {
	// Reports whether variable is initialized explicitly.
	pub fn is_initialized(self): bool { ret real(self.value) }

	// Reports whether variable is auto-typed.
	pub fn is_auto_typed(self): bool { ret !real(self.kind) || !real(self.kind.decl) }
}
