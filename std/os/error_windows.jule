// Copyright 2023 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::sys::{
	get_last_error,
	ERROR_ACCESS_DENIED,
	ERROR_FILE_NOT_FOUND,
	ERROR_NOT_READY,
	ERROR_INVALID_NAME,
	ERROR_PATH_NOT_FOUND
}

// Returns last os error by error number of windows.
fn get_last_os_error_windows(): OsError {
	let err = get_last_error()
	match err {
	| ERROR_ACCESS_DENIED:  ret OsError.Denied
	| ERROR_PATH_NOT_FOUND: ret OsError.NotExist
	| ERROR_NOT_READY:      ret OsError.Divice
	| ERROR_INVALID_NAME:   ret OsError.NotExist
	|:                      ret OsError.Ok
	}
}
